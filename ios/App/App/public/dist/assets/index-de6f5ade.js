(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function o(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(s){if(s.ep)return;s.ep=!0;const r=o(s);fetch(s.href,r)}})();let T=null;async function te(){try{Object.keys(h).length===0&&await Y(),ve(),Ee(),N()}catch(e){console.error("Error initializing home screen:",e)}}function ve(){const e=document.getElementById("category-container");e.innerHTML="";const t=JSON.parse(localStorage.getItem("wonCards")||"{}");for(const[o,n]of Object.entries(h)){const s=document.createElement("div");s.className="category-tile";const r=document.createElement("div");r.className="category-cards",n.cards.slice(0,10).forEach(l=>{const c=document.createElement("div");c.className="card-wrapper";const b=document.createElement("img");b.src=`card-images/${l}`,b.alt="Card";const f=document.createElement("div");f.className="card-overlay",c.appendChild(b),c.appendChild(f),t[o]&&t[o].includes(l)?c.classList.add("won-card"):c.classList.add("not-won-card"),r.appendChild(c)});const a=document.createElement("h2");a.className="category-title",a.textContent=o;const i=document.createElement("button");i.className="play-button",i.textContent="Play",i.onclick=()=>startGame(o),s.appendChild(r),s.appendChild(a),s.appendChild(i),e.appendChild(s)}}function Ee(){const e=document.getElementById("difficulty-dropdown");e.removeEventListener("change",_),e.addEventListener("change",_)}function _(e){const t=e.target.value;localStorage.setItem("selectedDifficulty",t),Ie(t)}function Ie(e){const o={easy:"easy.m4a",hard:"hard.m4a",superhard:"superhard.m4a",superduperhard:"superduperhard.m4a"}[e];T&&(T.pause(),T.currentTime=0),o&&(T=new Audio(`game-sounds/${o}`),T.play().catch(n=>console.error("Error playing audio:",n)))}function oe(e,t){const o=document.getElementById("show-won-card-screen"),n=document.getElementById("won-card-image"),s=document.querySelector(".won-card-image-container"),r=document.getElementById("return-home-button");n.src=`card-images/${e}`,w("show-won-card-screen"),setTimeout(()=>{o.classList.add("visible"),s.classList.add("animate-entrance"),Se(s),setTimeout(()=>{r.classList.add("visible")},500)},50),r.onclick=()=>{ne(),w("home-screen")}}function Se(e){for(let o=0;o<20;o++){const n=document.createElement("div");n.classList.add("sparkle");const s=Math.random()*100+"%",r=Math.random()*100+"%",a=Math.random()*1e3+"ms",i=Math.random()*1e3+1e3+"ms";n.style.left=s,n.style.top=r,n.style.animation=`sparkle ${i} ${a} infinite`,e.appendChild(n)}}function ne(){const e=document.getElementById("show-won-card-screen"),t=document.querySelector(".won-card-image-container"),o=document.getElementById("return-home-button");e.classList.remove("visible"),t.classList.remove("animate-entrance"),o.classList.remove("visible"),t.querySelectorAll(".sparkle").forEach(s=>s.remove())}const K=new Audio("game-sounds/need-points.m4a");function se(e){const t=document.getElementById(e);t?(t.classList.add("decrement"),setTimeout(()=>{t.classList.remove("decrement")},500)):console.error(`Points display element with id '${e}' not found`)}function re(e){const t=document.getElementById(e);t?(t.classList.add("show"),setTimeout(()=>{t.classList.remove("show")},1500),be()):console.error(`Message element with id '${e}' not found`)}function H(){return u>0}function ae(e,t,o,n){const s=document.getElementById(n);if(!s){console.error(`Card image element with id '${n}' not found.`);return}if(!e){console.error("No card selected. Unable to update card image.");return}const r=`card-images/${e}`;console.log(`Setting ${o} card image src to:`,r),s.src=r,s.alt=`Card from ${t}`,s.onload=()=>{console.log("Image loaded successfully")},s.onerror=()=>{console.error("Failed to load image:",r),s.src="path/to/default-or-error-image.png",s.alt="Error loading card image"}}function le(e){try{if(console.log("Selecting random card from category data:",e),!e||!e.cards||e.cards.length===0)return console.error("Invalid category data or no cards available"),null;const t=e.cards;console.log("Available cards:",t);const o=t[Math.floor(Math.random()*t.length)];return console.log("Selected card:",o),o}catch(t){return console.error("Error selecting random card:",t),null}}function ce(e,t){const o=JSON.parse(localStorage.getItem("wonCards")||"{}");o[t]||(o[t]=[]),o[t].includes(e)||(o[t].push(e),localStorage.setItem("wonCards",JSON.stringify(o)))}function W(e,t){localStorage.setItem(`${e}Progress`,JSON.stringify(t)),console.log(`${e} progress saved:`,t)}function be(){K.currentTime=0,K.play().catch(e=>console.error("Error playing audio:",e))}let C=0;const ie=16;let z="",x="",B=!0,M=!1;async function de(e,t){const o=parseInt(localStorage.getItem("points")||"0");console.log("Initializing Card Reveal with",o,"points and category:",e),z=e;const n=JSON.parse(localStorage.getItem("cardRevealProgress"));n&&!n.isCardFullyRevealed?(console.log("Found saved progress:",n),C=n.revealedBlocks,x=n.currentCard,M=!1,B=n.needNewCard):(console.log("No saved progress or card was fully revealed. Starting new card."),C=0,M=!1,B=!0),B&&(x=le(t),B=!1,W("cardReveal",{revealedBlocks:C,currentCard:x,isCardFullyRevealed:M,needNewCard:B}));const s=document.getElementById("card-board");s.style.display="grid",s.innerHTML="",ae(x,z,"cardReveal","card-reveal-image"),ke(),N(),Be()}function ke(){const e=document.getElementById("card-board");e.innerHTML="";for(let t=0;t<ie;t++){const o=document.createElement("div");o.className="card-block",o.dataset.index=t,o.addEventListener("click",function(){Le(this,this.dataset.index)}),e.appendChild(o)}}function Be(){console.log("Applying progress, revealed blocks:",C);const e=document.querySelectorAll(".card-block");if(M)e.forEach(t=>t.style.display="none");else for(let t=0;t<C;t++)e[t]&&(e[t].style.opacity="0")}function Le(e,t){H()&&e.style.opacity!=="0"?(e.style.opacity="0",q(-1),se("card-reveal-points"),C++,W("cardReveal",{revealedBlocks:C,currentCard:x,isCardFullyRevealed:M,needNewCard:B}),xe(),console.log("Block revealed, current state:",{totalPoints:u,revealedBlocks:C})):H()||re("card-reveal-out-of-points-message")}function xe(){C===ie&&!M&&(M=!0,B=!0,ce(x,z),W("cardReveal",{revealedBlocks:C,currentCard:x,isCardFullyRevealed:M,needNewCard:B}),oe(x))}let S=0,J="",I="",L=!0;const ue=25;let F=!1,d=400,R=600,v=40;const k=5;function me(e,t){const o=parseInt(localStorage.getItem("points")||"0");console.log("Initializing Plinko Game with",o,"points and category:",e),J=e;const n=JSON.parse(localStorage.getItem("plinkoProgress"));n?(console.log("Found saved progress:",n),S=n.progressBarFill,I=n.currentPlinkoCard,L=n.needNewCard):(console.log("No saved progress. Starting new game."),S=0,L=!0),L&&(I=le(t),L=!1,W("plinko",{progressBarFill:S,currentPlinkoCard:I,needNewCard:L}));const s=document.getElementById("plinko-board");d=s.clientWidth,R=s.clientHeight,v=d/8,Q(),ge(),ae(I,J,"plinko","plinko-card-image"),N();const r=document.getElementById("plinko-game-container");r.style.display="block",s.addEventListener("click",Pe),window.addEventListener("resize",Ae(()=>{d=s.clientWidth,R=s.clientHeight,v=Math.min(d,R)/8,Q()},250))}function Q(){const e=document.getElementById("plinko-board");e.innerHTML="",d=e.clientWidth,R=e.clientHeight;const t=10,o=Math.floor(d/v)-1;v=d/(o+1);for(let a=0;a<t;a++){const l=a%2===0?o-1:o,c=(l-1)*v,b=(d-c)/2;for(let f=0;f<l;f++){const g=document.createElement("div");g.className="peg";const m=b+f*v,A=v+a*v;g.style.left=`${m}px`,g.style.top=`${A}px`,e.appendChild(g)}}const n=[1,2,5,10,5,2,1],s=d/n.length;n.forEach((a,i)=>{const l=document.createElement("div");l.className="slot";const c=document.createElement("span");c.className="slot-number",c.textContent=a,l.appendChild(c),l.style.left=`${i*s}px`,l.style.width=`${s}px`,l.style.bottom="0",e.appendChild(l)});const r=document.createElement("div");r.id="ball",e.appendChild(r),console.log(`Board dimensions: ${d}x${R}, Peg spacing: ${v}`)}function ge(){const e=document.getElementById("plinko-progress-bar"),t=S/ue*100;e.style.width=`${t}%`}function Pe(e){if(!F)if(H()){const o=document.getElementById("plinko-board").getBoundingClientRect(),n=e.clientX-o.left;Me(Math.max(k,Math.min(d-k,n)))}else re("plinko-out-of-points-message")}function Me(e){if(F||!H()){console.log("Cannot drop ball: animation in progress or not enough points");return}F=!0,q(-1),se("plinko-points"),N();const t=document.getElementById("ball");t.style.display="block",t.style.left=`${e}px`,t.style.top="0";let o={x:e,y:0},n={x:0,y:0};function s(){if(o.y<R-20)n.y+=.6,o.x+=n.x,o.y+=n.y,n.x+=(Math.random()-.5)*.3,n.y+=(Math.random()-.5)*.3,document.querySelectorAll(".peg").forEach(r=>{const a=r.getBoundingClientRect(),i=t.getBoundingClientRect(),l=(a.left+a.right)/2-(i.left+i.right)/2,c=(a.top+a.bottom)/2-(i.top+i.bottom)/2;if(Math.sqrt(l*l+c*c)<k+10){const f=Math.atan2(c,l),g=8+Math.random()*4;n.x=-Math.cos(f)*g,n.y=-Math.sin(f)*g;const m=(Math.random()-.5)*.5;n.x+=Math.cos(m),n.y+=Math.sin(m),r.style.animation="none",r.offsetHeight,r.style.animation="pegPulse 0.3s ease-out"}}),(o.x<k||o.x>d-k)&&(n.x=-n.x*.8,o.x=o.x<k?k:d-k),t.style.left=`${o.x}px`,t.style.top=`${o.y}px`,requestAnimationFrame(s);else{const r=Ne(o.x);S+=r,ge(),W("plinko",{progressBarFill:S,currentPlinkoCard:I,needNewCard:L});const a=Math.floor(o.x/(d/7)),l=document.querySelectorAll(".slot")[a].querySelector(".slot-number");l.classList.add("animate-slot"),setTimeout(()=>{l.classList.remove("animate-slot")},1e3),S>=ue&&$e(),t.style.display="none",F=!1}}s()}function Ne(e){const t=d/7,o=Math.floor(e/t);return[1,2,5,10,5,2,1][Math.min(o,6)]}function $e(){console.log("Card revealed:",I),ce(I,J),S=0,L=!0,W("plinko",{progressBarFill:S,currentPlinkoCard:I,needNewCard:L}),setTimeout(()=>{oe(I)},500)}function Ae(e,t){let o;return function(...s){const r=()=>{clearTimeout(o),e(...s)};clearTimeout(o),o=setTimeout(r,t)}}let P={};const U=[];let p={};const V=10;let E=0,O=2,j=0,D=!1,y="",$="";const pe=[new Audio("game-sounds/nice.m4a"),new Audio("game-sounds/oo-nice.m4a"),new Audio("game-sounds/good-job.m4a"),new Audio("game-sounds/great.m4a")],fe=[new Audio("game-sounds/try-again.m4a"),new Audio("game-sounds/oops.m4a")];async function Re(){try{return await(await fetch("letter-sounds.json")).json()}catch(e){return console.error("Error fetching letter sounds:",e),null}}async function We(){if(y=localStorage.getItem("selectedCategory"),$=localStorage.getItem("selectedDifficulty"),console.log("Selected Category:",y),console.log("Selected Difficulty:",$),!y||!$){console.error("Category or difficulty not selected");return}Oe(),je();try{if(P=await Y(),!P)throw new Error("Failed to fetch word categories");if(console.log("Fetched word categories:",P),p=await Re(),!p)throw new Error("Failed to fetch letter sounds");console.log("Fetched letter sounds:",p)}catch(t){console.error("Error loading data:",t);return}$==="easy"?O=3:$==="hard"?O=4:$==="superhard"?O=6:$==="superduperhard"&&(O=12);const e=P[y].words;if(!Array.isArray(e)||e.length===0){console.error("No words found for the selected category");return}X(e),U.length=0;for(let t=0;t<Math.min(V,e.length);t++){const o=e[t],n={word:o.toUpperCase(),image:`./images/${o}.jpg`};U.push(n)}j=0,E=0,ye(),document.getElementById("level-container").style.display="block"}function ye(){const e=U[j],t=document.getElementById("level-container");t.innerHTML="",He();const o=document.createElement("div");o.className="points-display",o.innerHTML=`
    <span id="total-points-value">${u}</span>
    <img src="icons/coin.png" alt="Total Points">
  `,t.appendChild(o);const n=document.createElement("div");n.id="word-display",t.appendChild(n);const s=document.createElement("div");s.id="confetti-container",t.appendChild(s);const r=document.createElement("div");r.id="score-container",r.innerHTML=`
    <div id="current-points">Points Won: <span id="current-points-value">${E}</span></div>
    <div id="coin-container"></div>
  `,t.appendChild(r);const a=document.createElement("div");a.id="letter-container",t.appendChild(a);const i=document.createElement("div");i.id="image-container",t.appendChild(i);const l=e.word.toLowerCase();let c=0;for(;c<l.length;){let g=l[c],m=c+1;if(p&&p.letterCombinations){for(let G of Object.keys(p.letterCombinations))if(l.slice(c).startsWith(G)){g=G,m=c+G.length;break}}const A=document.createElement("button");A.innerText=g.toUpperCase(),A.className="letter-button",A.onclick=()=>he(g),a.appendChild(A),c=m}a.scrollWidth>a.clientWidth?a.style.justifyContent="flex-start":a.style.justifyContent="center";const b=[...Te(e)],f=X(b);for(const g of f){const m=document.createElement("img");m.src=g,m.alt="Word Image",m.classList.add("image-option"),m.onclick=()=>we(m,e),i.appendChild(m)}Ce()}function X(e){for(let t=e.length-1;t>0;t--){const o=Math.floor(Math.random()*(t+1));[e[t],e[o]]=[e[o],e[t]]}return e}function he(e){let t;if(e=e.toLowerCase(),p.letterCombinations&&p.letterCombinations[e])t=p.letterCombinations[e];else if(p.singleLetters&&p.singleLetters[e])t=p.singleLetters[e];else{console.warn(`No sound file found for: ${e}`);return}new Audio(`./letter-sounds/${t}`).play().catch(n=>console.error("Error playing audio:",n))}function Te(e){if(!P||!P[y]||!Array.isArray(P[y].words))return console.error("Invalid word data structure"),[];const t=[],o=P[y].words,n=o.findIndex(a=>a.trim().toLowerCase()===e.word.toLowerCase().trim());if(n===-1)return console.error("Current word not found in category words"),[];t.push(e.image);const s=o.slice(0);s.splice(n,1);const r=X(s);for(;t.length<O&&r.length>0;){const a=r.pop();if(a){const i=`./images/${encodeURIComponent(a)}.jpg`;t.includes(i)||t.push(i)}}return t}function we(e,t){if(D||e.classList.contains("disabled"))return;D=!0;const o=t.word.toLowerCase(),n=e.src.toLowerCase();decodeURIComponent(n.substring(n.lastIndexOf("/")+1,n.lastIndexOf(".")))===o?(Z(!0),ee(pe),showConfettiCannon(),setTimeout(()=>{De(),D=!1},1e3)):(Z(!1),ee(fe),e.classList.add("disabled"),D=!1)}function Z(e){e?(E++,q(1)):E>0&&(E--,q(-1)),console.log("Current Game Points:",E),Ce(),document.getElementById("current-points-value").innerText=E}function Ce(){const e=document.getElementById("coin-container");e.innerHTML="";for(let t=0;t<E;t++){const o=document.createElement("img");o.src="icons/coin.png",o.alt="Coin",o.classList.add("coin-icon"),e.appendChild(o)}}function Oe(){const e=document.getElementById("total-points-value");e&&(e.textContent=u)}function De(){j++,j<V?ye():Fe()}function Fe(){const e=document.getElementById("results-message");e.textContent=`You completed ${V} words and earned ${E} points!`;const t=document.getElementById("home-button"),o=document.getElementById("card-reveal-button"),n=document.getElementById("plinko-button");t.onclick=()=>{w("home-screen"),N()},o.onclick=()=>{w("card-reveal-screen"),de(y,h[y])},n.onclick=()=>{w("plinko-screen"),me(y,h[y])},w("results-screen")}function ee(e){const t=Math.floor(Math.random()*e.length),o=e[t];o.currentTime=0,o.play().catch(n=>console.error("Error playing audio:",n))}function He(){document.querySelectorAll(".image-option.disabled").forEach(t=>t.classList.remove("disabled"))}function je(){[...pe,...fe].forEach(e=>{e.load()})}let u=0,h={};function w(e){if(console.log("Switching to screen:",e),u=parseInt(localStorage.getItem("points")||"0"),document.getElementById("home-screen").style.display="none",document.getElementById("game-screen").style.display="none",document.getElementById("results-screen").style.display="none",document.getElementById("card-reveal-screen").style.display="none",document.getElementById("plinko-screen").style.display="none",document.getElementById("show-won-card-screen").style.display="none",document.getElementById(e).style.display=["results-screen","plinko-screen","show-won-card-screen"].includes(e)?"flex":"block",e.replace("-screen",""),ze(e),N(),ne(),e==="home-screen")console.log("Updating points display for home screen"),te();else if(e==="plinko-screen"){const t=localStorage.getItem("selectedCategory");t&&h[t]?me(t,h[t]):(console.error("Invalid category for Plinko game:",t),alert("Error loading Plinko game. Please try again."),w("home-screen"))}else if(e==="card-reveal-screen"){const t=localStorage.getItem("selectedCategory");t&&h[t]?de(t,h[t]):(console.error("Invalid category for card reveal:",t),alert("Error loading card reveal. Please try again."),w("home-screen"))}}async function Y(){try{return h=await(await fetch("word-categories.json")).json(),h}catch(e){return console.error("Error fetching word categories:",e),null}}function qe(){document.querySelectorAll(".nav-item").forEach(t=>{t.addEventListener("click",()=>{const o=t.dataset.screen;console.log("Navigation clicked:",o),w(o)})})}function Ge(e){const t=document.getElementById("difficulty-dropdown").value;console.log(`Starting game with category: ${e}, difficulty: ${t}`),new Audio("game-sounds/lets-go.m4a").play(),localStorage.setItem("selectedCategory",e),localStorage.setItem("selectedDifficulty",t),w("game-screen"),We()}function ze(e){document.querySelectorAll(".nav-item").forEach(o=>{o.dataset.screen===e?o.classList.add("selected"):o.classList.remove("selected")})}function Je(){u=parseInt(localStorage.getItem("points")||"0")}function q(e){console.log("Updating points. Current:",u,"Change:",e),u+=e,localStorage.setItem("points",u.toString()),console.log("New total points:",u),N()}function N(){console.log("Updating points display. Current total points:",u),document.querySelectorAll(".points-display span").forEach(t=>{t.textContent!==u.toString()&&(t.textContent=u)})}function Ue(){u=parseInt(localStorage.getItem("points")||"0"),console.log("Initialized total points:",u),N()}document.addEventListener("DOMContentLoaded",async()=>{try{await Y(),Je(),te(),Ue(),qe()}catch(e){console.error("Failed to initialize home screen:",e)}});window.startGame=Ge;window.revealBlock=function(e,t){(void 0)(e,t)};window.playLetterSound=function(e){he(e)};window.checkImage=function(e,t){we(e,t)};
